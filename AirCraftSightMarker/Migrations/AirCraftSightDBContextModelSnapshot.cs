// <auto-generated />
using System;
using AirCraftSightMarker.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AirCraftSightMarker.Migrations
{
    [DbContext(typeof(AirCraftSightDBContext))]
    partial class AirCraftSightDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AirCraftSpotterApp.Data.Entities.Model.AirCraftSight", b =>
                {
                    b.Property<int>("SerialID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateandTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Make")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<bool>("MarkedForDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhotoFileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Registration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("VisibleID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("SerialID");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("AirCraftSights");
                });

            modelBuilder.Entity("AirCraftSpotterApp.Data.Entities.Model.User", b =>
                {
                    b.Property<int>("SerialID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("MarkedForDelete")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("VisibleID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("SerialID");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("User");
                });

            modelBuilder.Entity("AirCraftSpotterApp.Data.Entities.Model.AirCraftSight", b =>
                {
                    b.HasOne("AirCraftSpotterApp.Data.Entities.Model.User", "ModifiedUser")
                        .WithMany()
                        .HasForeignKey("ModifiedBy");
                });

            modelBuilder.Entity("AirCraftSpotterApp.Data.Entities.Model.User", b =>
                {
                    b.HasOne("AirCraftSpotterApp.Data.Entities.Model.User", "ModifiedUser")
                        .WithMany()
                        .HasForeignKey("ModifiedBy");
                });
#pragma warning restore 612, 618
        }
    }
}
